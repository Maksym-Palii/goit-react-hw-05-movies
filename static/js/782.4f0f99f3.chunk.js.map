{"version":3,"file":"static/js/782.4f0f99f3.chunk.js","mappings":"8PAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAEMC,EAAgB,mCAAG,WAAMC,GAAN,uFACAF,EAAAA,EAAAA,IAAA,gCAHZ,mCAGY,kBACqBE,EADrB,wCADA,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOtB,ICXA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAwF,wB,SC8CxF,EA3CmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOJ,EAAP,KAAoBK,EAApB,KAuBA,OACE,kBAAMC,UAAWC,EAAUC,SAtBR,SAAAC,GACnBA,EAAIC,iBAEuB,KAAvBV,EAAYW,QAKhBR,EAAOH,GAKPK,EAAe,KATbO,MAAM,oCAMT,EAYC,WACE,kBACEN,UAAWC,EACXM,SATe,SAAAJ,GACnB,IAAQK,EAAUL,EAAIM,OAAdD,MACRT,EAAeS,EAChB,EAOKE,KAAK,cACLF,MAAOd,EACPiB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQd,UAAWC,EAASU,KAAK,SAAjC,sBAKL,EC5CD,EAA4B,0BAA5B,EAA6D,qBAA7D,EAAyF,qBCmEzF,EA9De,WAAO,IAAD,EACnB,GAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAA0BlB,EAAAA,EAAAA,UAAS,MAAnC,eAAOmB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAe,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAYpD,IAAMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,+GAEElC,EAAiB6B,GAFnB,cAGW,KAD1B3B,EAFe,QAGRiC,QAAQC,QACnBvB,MAAM,mCAAD,OAAoCgB,IAJtB,SAMF3B,EAASiC,QAAQE,KAAI,SAAAC,GAAE,MAAK,CAC7CC,MAAOD,EAAGC,MACVC,GAAIF,EAAGE,GAFiC,IANrB,OAMfrC,EANe,OAUrBoB,EAAUpB,GAVW,kDAYrBsB,EAAS,KAAMgB,QAZM,0DAAH,qDAgBlBZ,GACFK,GAEH,GAAE,CAACL,KAGF,iBAAKtB,UAAWC,EAAhB,WACE,SAAC,EAAD,CAAYJ,OApCS,SAAAH,GAKzB,IAA2BgB,EAEzBW,EAD4B,MADHX,EAJPhB,GAKe,CAAEgB,KAAAA,GAAS,CAAC,GAJ7CQ,EAAS,KACV,IAkCID,IAAS,wBAAKA,KACf,wBACGF,EAAOe,KAAI,SAAAC,GAAE,OACZ,eAAgB/B,UAAWC,EAA3B,UACE,SAAC,KAAD,CACED,UAAWC,EACXkC,GAAE,UAAKJ,EAAGE,IACVG,MAAO,CAAEC,KAAMb,GAHjB,SAKGO,EAAGC,SANCD,EAAGE,GADA,QAcrB,C","sources":["api/apiSearch.js","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = `abbc06680f95aa51ddd683d2c46a812f`;\n\nconst fetchSearchsMovi = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nexport default fetchSearchsMovi;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"btn\":\"SearchForm_btn__TXrR3\"};","import { PropTypes } from 'prop-types';\nimport { useState } from 'react';\nimport css from 'components/SearchForm/SearchForm.module.css';\n\nconst SearchForm = ({ submit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      alert('Enter a query in the search field');\n      return;\n    }\n\n    submit(searchQuery);\n    reset();\n  };\n\n  function reset() {\n    setSearchQuery('');\n  }\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n    setSearchQuery(value);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        onChange={handleChange}\n        name=\"searchQuery\"\n        value={searchQuery}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button className={css.btn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"list\":\"Movies_list__hqYjd\",\"link\":\"Movies_link__MzAfU\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport fetchSearchsMovi from 'api/apiSearch';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport css from 'pages/Movies/Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sentSearchQuery = searchParams.get('name') ?? '';\n\n  const hendleFormSubmit = searchQuery => {\n    updateQueryString(searchQuery);\n    setError(null);\n  };\n\n  function updateQueryString(name) {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  }\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const serchMmoviesList = async () => {\n      try {\n        const response = await fetchSearchsMovi(sentSearchQuery);\n        if (response.results.length === 0) {\n          alert(`Sorry, no movi for this request ${sentSearchQuery}`);\n        }\n        const data = await response.results.map(el => ({\n          title: el.title,\n          id: el.id,\n        }));\n        setMovies(data);\n      } catch (error) {\n        setError(error.mesage);\n      }\n    };\n\n    if (sentSearchQuery) {\n      serchMmoviesList();\n    }\n  }, [sentSearchQuery]);\n\n  return (\n    <div className={css.container}>\n      <SearchForm submit={hendleFormSubmit} />\n      {error && <h1>{error}</h1>}\n      <ul>\n        {movies.map(el => (\n          <li key={el.id} className={css.list}>\n            <Link\n              className={css.link}\n              to={`${el.id}`}\n              state={{ from: location }}\n            >\n              {el.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","fetchSearchsMovi","searchQuery","response","data","submit","useState","setSearchQuery","className","css","onSubmit","evt","preventDefault","trim","alert","onChange","value","target","name","type","autoComplete","autoFocus","placeholder","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","sentSearchQuery","get","location","useLocation","useEffect","serchMmoviesList","results","length","map","el","title","id","mesage","to","state","from"],"sourceRoot":""}