{"version":3,"file":"static/js/99.a108e702.chunk.js","mappings":"kOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAEMC,EAAS,mCAAG,WAAMC,GAAN,uFACOF,EAAAA,EAAAA,IAAA,gBACZE,EADY,4BAHZ,qCAEK,cACVC,EADU,yBAITA,EAASC,MAJA,2CAAH,sDAOf,I,kBCXA,EAA4B,wBAA5B,EAA2D,mBAA3D,EAAyF,uBAAzF,EAAsH,kBAAtH,EAAgJ,oBAAhJ,EAA2K,mB,SC8C3K,EA1Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAsBR,OApBAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQX,EAAUC,GAFlB,cAETC,EAFS,gBAIIA,EAASG,KAAKO,KAAI,SAAAC,GAAE,MAAK,CAC1CC,UAAWD,EAAGC,UACdC,KAAMF,EAAGE,KACTC,MAAM,kCAAD,OAAoCH,EAAGI,cAC5CC,GAAIL,EAAGK,GAJ8B,IAJxB,OAITf,EAJS,OAWfG,EAAQH,GAXO,kDAafK,EAAS,KAAMW,QAbA,0DAAH,qDAgBhBR,GACD,GAAE,CAACV,KAGF,iBAAKmB,UAAWC,EAAhB,UACGd,IAAS,wBAAKA,KACf,eAAIa,UAAWC,EAAf,SACGhB,EAAKO,KAAI,SAAAC,GAAE,OACV,gBAAIO,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAASC,IAAKT,EAAGG,MAAOO,IAAKV,EAAGE,QAChD,eAAIK,UAAWC,EAAf,SAA2BR,EAAGE,QAC9B,eAAGK,UAAWC,EAAd,wBAAoCR,EAAGC,eAHPD,EAAGK,GAD3B,QAUnB,C","sources":["api/apiCast.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = `abbc06680f95aa51ddd683d2c46a812f`;\n\nconst fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport default fetchCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"list\":\"Cast_list__GlWio\",\"listItem\":\"Cast_listItem__UvJjd\",\"img\":\"Cast_img__-isbW\",\"title\":\"Cast_title__0cH9s\",\"text\":\"Cast_text__P2vgu\"};","import fetchCast from 'api/apiCast';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from 'components/Cast/Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const selectCast = async () => {\n      try {\n        const response = await fetchCast(movieId);\n\n        const data = await response.cast.map(el => ({\n          character: el.character,\n          name: el.name,\n          photo: `https://image.tmdb.org/t/p/w200${el.profile_path}`,\n          id: el.id,\n        }));\n        // console.log(data);\n        setCast(data);\n      } catch (error) {\n        setError(error.mesage);\n      }\n    };\n    selectCast();\n  }, [movieId]);\n\n  return (\n    <div className={css.container}>\n      {error && <h1>{error}</h1>}\n      <ul className={css.list}>\n        {cast.map(el => (\n          <li className={css.listItem} key={el.id}>\n            <img className={css.img} src={el.photo} alt={el.name} />\n            <h4 className={css.title}>{el.name}</h4>\n            <p className={css.text}>Character: {el.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","fetchCast","movieId","response","data","useState","cast","setCast","error","setError","useParams","useEffect","selectCast","map","el","character","name","photo","profile_path","id","mesage","className","css","src","alt"],"sourceRoot":""}