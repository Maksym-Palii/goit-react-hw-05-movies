{"version":3,"file":"static/js/886.8d1e4c8c.chunk.js","mappings":"oOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAEMC,EAAgB,mCAAG,WAAMC,GAAN,uFACAF,EAAAA,EAAAA,IAAA,gBAAmBE,EAAnB,oBAHZ,qCAEY,cACjBC,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKtB,I,0BCTA,EAA4B,gCAA5B,EAAuE,+BAAvE,EAAoH,kCAApH,EAA8J,4BAA9J,EAAiM,2BAAjM,EAAmO,2BAAnO,EAAiR,uCAAjR,EAA0U,sCAA1U,EAAsY,0C,SCiFtY,EA7EqB,WAAO,IAAD,MACzB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACFS,GAAWC,EAAAA,EAAAA,MAGXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KA0BpD,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+GAEOjB,EAAiBC,GAFxB,QAEVC,EAFU,UAIRC,EAAO,CACXe,KAAK,kCAAD,OAAoChB,EAASiB,aACjDC,MAAOlB,EAASkB,MAChBC,SAAUnB,EAASmB,SACnBC,OAAQpB,EAASoB,OACjBC,MAAOC,KAAKC,MAA8B,GAAxBvB,EAASwB,cAC3BC,KAAM,IAAIC,KAAK1B,EAAS2B,cAAcC,eAGxCxB,EAASH,IAbK,gDAgBhBK,EAAS,KAAMuB,QAhBC,yDAAH,qDAoBjBd,GACD,GAAE,CAAChB,KAGF,4BACE,SAAC,KAAD,CAAM+B,GAAIpB,EAAaqB,QAASC,UAAWC,EAA3C,qBAGC5B,IAAS,wBAAKA,KACf,iBAAK2B,UAAWC,EAAhB,WACE,gBAAKC,IAAK/B,EAAMa,KAAMmB,IAAKhC,EAAMe,SACjC,iBAAKc,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UACG9B,EAAMe,MADT,KACkBf,EAAMsB,KADxB,QAGA,eAAGO,UAAWC,EAAd,yBAAqC9B,EAAMkB,MAA3C,QACA,eAAIW,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAAyB9B,EAAMgB,YAC/B,eAAIa,UAAWC,EAAf,qBACA,kCACG9B,EAAMiB,cADT,aACG,EAAcgB,KAAI,SAAAC,GAAE,OACnB,eAAIL,UAAWC,EAAf,SACGI,EAAGC,MADwBD,EAAGE,GADd,aAQ3B,eAAIP,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMH,GAAG,OAAT,sBAEF,yBACE,SAAC,KAAD,CAAME,UAAWC,EAAyBH,GAAG,UAA7C,2BAKJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/apiDetails.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = `abbc06680f95aa51ddd683d2c46a812f`;\n\nconst fetchDetailsMovi = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport default fetchDetailsMovi;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"linkBack\":\"MovieDetails_linkBack__CKjEq\",\"description\":\"MovieDetails_description__33mrB\",\"title\":\"MovieDetails_title__cUGs9\",\"text\":\"MovieDetails_text__RHcc4\",\"list\":\"MovieDetails_list__dbNMP\",\"informationTitle\":\"MovieDetails_informationTitle__u9jEM\",\"informationList\":\"MovieDetails_informationList__arChJ\",\"informationListItem\":\"MovieDetails_informationListItem__TBFNb\"};","import fetchDetailsMovi from 'api/apiDetails';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from 'pages/MovieDetails/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/';\n\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const selectMovie = async () => {\n      try {\n        const response = await fetchDetailsMovi(movieId);\n        if (response) {\n          const data = {\n            foto: `https://image.tmdb.org/t/p/w300${response.poster_path}`,\n            title: response.title,\n            overview: response.overview,\n            genres: response.genres,\n            score: Math.round(response.vote_average * 10),\n            date: new Date(response.release_date).getFullYear(),\n          };\n\n          setMovie(data);\n        }\n      } catch (error) {\n        setError(error.mesage);\n      }\n    };\n\n    selectMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current} className={css.linkBack}>\n        Go back\n      </Link>\n      {error && <h1>{error}</h1>}\n      <div className={css.container}>\n        <img src={movie.foto} alt={movie.title} />\n        <div className={css.description}>\n          <h1 className={css.title}>\n            {movie.title} ({movie.date})\n          </h1>\n          <p className={css.text}>User Score: {movie.score}%</p>\n          <h2 className={css.title}>Overview</h2>\n          <p className={css.text}>{movie.overview}</p>\n          <h2 className={css.title}>Genres</h2>\n          <ul>\n            {movie.genres?.map(el => (\n              <li className={css.list} key={el.id}>\n                {el.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <h3 className={css.informationTitle}>Additional information</h3>\n      <ul className={css.informationList}>\n        <li className={css.informationListItem}>\n          <Link to=\"cast\"> Cast</Link>\n        </li>\n        <li>\n          <Link className={css.informationListItem} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","fetchDetailsMovi","movieId","response","data","useState","movie","setMovie","error","setError","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","selectMovie","foto","poster_path","title","overview","genres","score","Math","round","vote_average","date","Date","release_date","getFullYear","mesage","to","current","className","css","src","alt","map","el","name","id","Suspense","fallback"],"sourceRoot":""}